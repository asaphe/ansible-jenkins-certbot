# Generated using https://mozilla.github.io/server-side-tls/ssl-config-generator/
upstream jenkins {
    server 127.0.0.1:8080 fail_timeout=0;
}

server {
    listen 80;
    listen [::]:80;
    server_name www.{{ jenkins_dns_record }} {{ jenkins_dns_record }};

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.{{ jenkins_dns_record }} {{ jenkins_dns_record }};

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate {{letsencrypt_live_base_path}}{{ jenkins_dns_record }}/concated_cert.pem;                          # Cerbot
    ssl_certificate_key {{letsencrypt_live_base_path}}{{ jenkins_dns_record }}/privkey.pem;                            # Cerbot
    ssl_session_tickets off;                                                                                    # Cerbot

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate {{letsencrypt_live_base_path}}{{ jenkins_dns_record }}/fullchain.pem;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location / {
      proxy_set_header        Host $host:$server_port;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_redirect http:// https://;
      proxy_pass              http://jenkins;
      # Required for new HTTP-based CLI
      proxy_http_version 1.1;
      proxy_request_buffering off;
      proxy_buffering off; # Required for HTTP-based CLI to work over SSL
    }
}